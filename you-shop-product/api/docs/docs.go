// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get products data",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "page number. Default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "page_size number. Default is 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "page or page_size is not a positive number",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ValidationError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Add product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of product",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sku of product",
                        "name": "sku",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user manual of product",
                        "name": "user_manual",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "images of product. Max is 10 images",
                        "name": "product_images",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "thumbnail of product",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "/api/v1/products/ddb1fdef-2ffb-44a5-a833-fab7b4d60355"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ValidationError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ValidationError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id in uuid format. Eg: ddb1fdef-2ffb-44a5-a833-fab7b4d60355",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ProductError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id, Eg: ddb1fdef-2ffb-44a5-a833-fab7b4d60355 ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product update body",
                        "name": "updateProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProduct"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Cannot parse Id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ValidationError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Cannot parse request body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/error.ValidationError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ProductStatus": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "Active",
                "Inactive"
            ]
        },
        "error.ProductError": {
            "type": "object"
        },
        "error.ValidationError": {
            "type": "object"
        },
        "model.ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "is_success": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "product.UpdateProduct": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.ProductStatus"
                },
                "userManual": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
